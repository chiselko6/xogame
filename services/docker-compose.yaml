version: '3.7'
services:
  ws-frontend-service:
    build:
      context: ./ws_frontend/
      dockerfile: Dockerfile
    ports:
      - 8001:8000
    env_file:
      - ./ws_frontend/.env
    healthcheck:
      test: ["CMD", "curl", "http://0.0.0.0:8000/healthcheck"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s
  api-service:
    build:
      context: ./api/
      dockerfile: Dockerfile
    expose:
      - 8000
    env_file:
      - ./api/.env
    depends_on:
      - api-db
    healthcheck:
      test: ["CMD", "curl", "http://0.0.0.0:8000/healthcheck"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s
  api-nginx:
    build:
      context: ./api/nginx/
      dockerfile: Dockerfile
    ports:
      - 8002:80
    depends_on:
      - api-service
  game-service:
    build:
      context: ./game/
      dockerfile: Dockerfile
    expose:
      - 8000
    env_file:
      - ./game/.env
    depends_on:
      - game-db
    healthcheck:
      test: ["CMD", "curl", "http://0.0.0.0:8000/healthcheck"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s
  game-nginx:
    build:
      context: ./game/nginx/
      dockerfile: Dockerfile
    ports:
      - 8003:80
    depends_on:
      - game-service
  api-db:
    image: postgres:12.0-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./xoapi_postgres/:/usr/src/postgres/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=xo-api
  game-db:
    image: postgres:12.0-alpine
    ports:
      - "5433:5432"
    volumes:
      - ./xogame_postgres/:/usr/src/postgres/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=xo-game

volumes:
  xogame_postgres:
  xoapi_postgres:
